name: core-web-next deploy to EKS
on:
    push: 
        branches: main
    pull_request:
        branches: main

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
    
            - name: Install kubectl
              uses: azure/setup-kubectl@v3

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-session-token: ${{ secrets.AWS_SESSION_TOKEN}}
                aws-region: ${{ vars.AWS_REGION }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2

            - name: add env
              run: |
                cat <<EOT >> .env
                FLASK_RUN_PORT=5050
                FLASK_RUN_HOST=127.0.0.1
                FLASK_DEBUG=1
                
                REDIS_URL=redis://redis.default.svc.cluster.local:6379/0
                
                MAIL_SERVER=smtp.gmail.com
                MAIL_PORT=465
                MAIL_USE_TLS=0
                MAIL_USERNAME=librarymorningstar@gmail.com
                MAIL_PASSWORD=bvjoepfwjwmnvkgt
                MAIL_USE_SSL=1
                MAIL_FROM_NAME=SiManis
                MAIL_FROM_ADDRESS=librarymorningstar@gmail.com
                EOT

            - name: Build, tag, and push docker image to amazon ecr
              env: 
                REGISTRY: ${{steps.login-ecr.outputs.registry}}
                REPOSITORYPROD: simanis-core-backend-flask-prod
                REPOSITORYCELERY: simanis-core-backend-flask-celery
                IMAGE_TAG: latest
                CONTEXTPROD: Dockerfile.prod
                CONTEXTCELERY: Dockerfile.celery
              run: |
                docker build -f $CONTEXTPROD -t $REGISTRY/$REPOSITORYPROD:$IMAGE_TAG .
                docker build -f $CONTEXTCELERY -t $REGISTRY/$REPOSITORYCELERY:$IMAGE_TAG .
                docker push $REGISTRY/$REPOSITORYPROD:$IMAGE_TAG
                docker push $REGISTRY/$REPOSITORYCELERY:$IMAGE_TAG

            - name: Update kube config
              run: aws eks update-kubeconfig --name simanis-cluster

            - name: Deploy to EKS
              run: |
                kubectl apply -f k8s-dependency.yaml
                kubectl apply -f k8s-simanis.yaml